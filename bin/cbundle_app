#!/bin/bash

function die () {
  echo 1>&2 "${1}"
  exit 1
}

SCRIPT_BASE=$(cd $(dirname $0) && pwd)

debug="${1}"
if [ "x${debug}" = "xdebug" ] ; then
  shift
  ARG_LEN=$(echo -n "${1}" | wc -c)
  ARG_NUMERIC_LEN=$(echo -n "${1}" | tr -dc [:digit:] | wc -c)  # strip all non-digits
  if [ ${ARG_LEN} -eq ${ARG_NUMERIC_LEN} ] ; then
    # Second arg is the debug port
    DEBUG_PORT="${1}"
    shift
  else
    DEBUG_PORT=5005
  fi
  debug="-Xdebug -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=${DEBUG_PORT}"
else
  debug=""
fi

APP_BASE=${1}
if [ -z "${APP_BASE}" ] ; then
  die "No app dir specified"
fi

# If a pre_bundle.sh script is present, run it first
if [ -x ${APP_BASE}/pre_bundle.sh ] ; then
  ${APP_BASE}/pre_bundle.sh || die "Error running ${APP_BASE}/pre_bundle.sh"
fi

if [ ! -f ${APP_BASE}/cloudos-manifest.json ] ; then
  die "No cloudos-manifest.json found in ${APP_BASE}, skipping"
fi

APP_BASE=$(cd ${APP_BASE} && pwd)

APP=$(basename ${APP_BASE})
TARGET=${APP_BASE}/target
BUNDLE_DIR=${TARGET}/${APP}-bundle
TARBALL=${TARGET}/${APP}-bundle.tar.gz

# cleanup any previous bundling and start fresh
rm -rf ${BUNDLE_DIR}
rm -rf ${TARBALL}
mkdir -p ${BUNDLE_DIR}

# Run bundler
cd ${SCRIPT_BASE}/../appstore-common && \
MAVEN_OPTS="${debug} ${MAVEN_OPTS}" mvn exec:java \
  -Dexec.mainClass=cloudos.appstore.bundler.BundlerMain \
  -Dexec.args="-m ${APP_BASE}/cloudos-manifest.json -o ${BUNDLE_DIR}" \
  1>&2
if [ $? -ne 0 ] ; then
die "Error running bundler on ${APP_BASE}"
fi

# make the tarball
cd ${BUNDLE_DIR} && tar czf ${TARBALL} . || die "Error building tarball"

echo 1>&2 "Successfully built tarball for ${APP} from ${BUNDLE_DIR}: ${TARBALL}"
echo ${TARBALL}
