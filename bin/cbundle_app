#!/bin/bash

function die () {
  echo 1>&2 "${1}"
  exit 1
}

SCRIPT_BASE=$(cd $(dirname $0) && pwd)

APP_BASE=${1}
if [ -z "${APP_BASE}" ] ; then
  die "No app dir specified"
fi

if [ ! -f ${APP_BASE}/cloudos-manifest.json ] ; then
  die "No cloudos-manifest.json found in ${APP_BASE}, skipping"
fi

APP=$(basename ${APP_BASE})
TARGET=${APP_BASE}/target
BUNDLE_DIR=${TARGET}/${APP}-bundle
TARBALL=${TARGET}/${APP}-bundle.tar.gz

# cleanup any previous bundling and start fresh
rm -rf ${BUNDLE_DIR}
rm -rf ${TARBALL}
mkdir -p ${BUNDLE_DIR}

# if there is a src dir, and the jar is not there, build it
if [[ -d ${APP_BASE}/src ]] ; then
  if [[ ! -d ${TARGET} || $(find ${TARGET} -type f -name "${APP}-*.jar" | wc -l | tr -d [:blank:]) -eq 0 ]] ; then
    cd ${APP_BASE} && mvn clean package 1>&2
    if [ $? -ne 0 ] ; then
      die "Build failed"
    fi
  fi

  # ensure that only 1 jar matches
  if [ $(find ${TARGET} -type f -name "${APP}-*.jar" | wc -l | tr -d [:blank:]) -ne 1 ] ; then
    die "Build did not produce exactly 1 jar"
  fi

  # copy jar
  cp $(find ${TARGET} -type f -name "${APP}-*.jar") ${BUNDLE_DIR}/plugin.jar || die "error copying jar to plugin.jar"
fi

# Run bundler
cd ${SCRIPT_BASE}/../appstore-common && \
mvn exec:java \
  -Dexec.mainClass=cloudos.appstore.bundler.BundlerMain \
  -Dexec.args="-m ${APP_BASE}/cloudos-manifest.json -o ${BUNDLE_DIR}" \
  1>&2
if [ $? -ne 0 ] ; then
die "Error running bundler on ${APP_BASE}"
fi

# make the tarball
cd ${BUNDLE_DIR} && tar czf ${TARBALL} . || die "Error building tarball"

echo 1>&2 "Successfully built tarball for ${app} from ${BUNDLE_DIR}: ${TARBALL}"
echo ${TARBALL}
