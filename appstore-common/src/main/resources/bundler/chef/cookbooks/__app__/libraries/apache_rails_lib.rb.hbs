#
# Cookbook Name:: {{app.name}}
# Library:: apache_rails_lib
#
# {{app.publisher.packaging_copyright}}
#

class Chef::Recipe::{{app.chefName}}

    def self.apache_rails (chef, app, config)

        base = Chef::Recipe::Base
        apache = Chef::Recipe::Apache
        apache.enable_module(chef, 'proxy')
        apache.enable_module(chef, 'headers')

        config[:mode] = :proxy
        config[:port] = app[:port]

        rails_app_dir = Chef::Recipe::{{app.chefName}}.rails_dir(app)

{{#unless app.sysinit}}
{{#unless app.services}}
        # Use default rails service management
        chef.template "#{app[:run_as_home]}/{{app.name}}/Procfile" do
          owner app[:run_as]
          group 'root'
          mode '0700'
          variables ({ :app => app })
          action :create
        end

        chef.bash 'setup foreman/upstart for {{app.name}}' do
          user 'root'
          cwd rails_app_dir
          code <<-EOF
export PORT=#{app[:port]}
export RAILS_ENV=production
export HOME=#{app[:run_as_home]}
foreman export --app={{app.name}} --user=#{app[:run_as]} --log=$(pwd)/log/ upstart /etc/init
EOF
        end

        svc = app[:default_service_name]
        chef.bash "start {{app.name}} app (service #{svc})" do
            user 'root'
            cwd app[:run_as_home]
            code <<-EOF
service #{svc} restart
EOF
        end
{{/unless}}
{{/unless}}

    chef.bash 'configure {{app.name}} to serve static assets' do
        user app[:run_as]
        cwd rails_app_dir
    code <<-EOF
PROD_ENV_FILE="#{rails_app_dir}/config/environments/production.rb"
if [ ! -f ${PROD_ENV_FILE} ] ; then
    echo "No ${PROD_ENV_FILE} found" && exit 1
fi
    has_serve_static=$(cat ${PROD_ENV_FILE} | grep config.serve_static_assets | wc -l)
    case "${has_serve_static}" in
    0)
        sed -i 's/Application.configure do/Application.configure do\n  config.serve_static_assets = true\n/' ${PROD_ENV_FILE}
        ;;

    1)
        sed -i 's/config.serve_static_assets\s*=\s*false/config.serve_static_assets = true/g' ${PROD_ENV_FILE}
        ;;

    *)
        echo "More than one config.serve_static_assets directive found in ${PROD_ENV_FILE}"
        exit 1
        ;;
    esac

bundle exec rake assets:precompile RAILS_ENV=production
EOF
    end

    apache.define_app(chef, '{{app.name}}', config)
end

end