#
# Cookbook Name:: {{app.name}}
# Library:: apache_rails_lib
#
# {{app.publisher.packaging_copyright}}
#

class Chef::Recipe::{{app.chefName}}

    def self.apache_rails (chef, app, config)

        base = Chef::Recipe::Base
        apache = Chef::Recipe::Apache
        apache.enable_module(chef, 'proxy')
        apache.enable_module(chef, 'headers')

        config[:mode] = :proxy

        ports_bag = base.ports_databag chef, '{{app.name}}'
        app[:port] = config[:port] = ports_bag['primary']

{{#unless app.sysinit}}
        chef.template "#{app[:run_as_home]}/{{app.name}}/Procfile" do
          owner app[:run_as]
          group 'root'
          mode '0700'
          variables ({ :app => app })
          action :create
        end

        chef.bash 'setup foreman/upstart for {{app.name}}' do
          user 'root'
          cwd "#{app[:run_as_home]}/{{app.name}}"
          code <<-EOF
export PORT=#{app[:port]} ; foreman export --user #{app[:run_as]} --log $(pwd)/log/ upstart /etc/init
        EOF
        end

        chef.bash 'start {{app.name}} app' do
          user 'root'
          cwd app[:run_as_home]
          code <<-EOF
service app-{{app.name}} restart
        EOF
        end
{{/unless}}

        apache.define_app(chef, '{{app.name}}', config)
    end

end