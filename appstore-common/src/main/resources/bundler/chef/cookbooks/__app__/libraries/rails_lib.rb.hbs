#
# Cookbook Name:: {{app.name}}
# Library:: rails_lib
#

class Chef::Recipe::{{app.chefName}}

    def self.init (chef, app)

        %w( ruby1.9.1 ruby1.9.1-dev ).each do |pkg|
            chef.package pkg do
                action :install
            end
        end

        %w( bundler rake foreman ).each do |gem|
            chef.bash "install ruby gem for {{app.name}}: #{gem}" do
                user 'root'
                code <<-EOF
success=0
for i in 1 2 3 ; do
    gem install #{gem} --no-ri --no-rdoc
    if [ $? -eq 0 ] ; then
        success=1
        break
    fi
done
if [ ${success} -ne 1 ] ; then
    echo "gem install #{gem} failed for {{app.name}}"
    exit 1
fi
                EOF
            end
        end
    end

    def self.rails_dir (app)
        dir = app[:run_as]
        dir = app[:repo_dir] if app[:repo_dir].to_s != ''
        "#{app[:run_as_home]}/#{dir}"
    end

    def self.init_rails (chef, app)
        rails_dir = Chef::Recipe::{{app.chefName}}.rails_dir(app)

        chef.bash "install gems required by {{app.name}} in #{rails_dir}" do
          user app[:run_as]
          cwd rails_dir
          code <<-EOF
success=0
for i in 1 2 3 ; do
  bundle install --path vendor/bundle
  if [ $? -eq 0 ] ; then
    success=1
    break
  fi
done
if [ ${success} -ne 1 ] ; then
  echo "bundle install for {{app.name}} failed, dir was $(pwd)"
  exit 1
fi
          EOF
        end

        chef.bash 'ensure gems for {{app.name}} are readable' do
          user 'root'
          code <<-EOF

for dir in $(find /var/lib/gems -type d) ; do
  chmod a+rx "${dir}"
done

for file in $(find /var/lib/gems -type f) ; do
  chmod a+r "${file}"
done
          EOF
        end

    end

end